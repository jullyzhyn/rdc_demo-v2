#ifndef DATA_TYPE_H
#define DATA_TYPE_H

#define MAX_EVENT_COUNT	16

#define MAX_RECV_SIZE  	2048
#define MAX_SEND_SIZE	2048
#define MAX_SEND_BUF_SIZE 2040
#define RECV_HEAER_SIZE 28
#define SEND_HEAER_SIZE 8


#define INJECTION_POSITION_COUNT 200 
#define PARAM_SYNC_NUMBER 80
typedef unsigned char boolean;
typedef char int8;
typedef unsigned char uint8;
typedef short int16;
typedef unsigned short uint16;
typedef int int32;
typedef unsigned int uint32;


typedef enum ERROR_CODE_ENUM
{
	/* 主控任务异常 */
	ERROR_NONE_ENUM,
	/*cmdMain 异常码*/	
	MAIN_ERR_MIN = 100,
        MAIN_INITIALIZE_FAILED,
        MAIN_NOT_INITIAL,
	MAIN_OPEN_PARAM_MC_FAILED,
	MAIN_READ_PARAM_MC_FAILED,
	MAIN_OPEN_PARAM_CTRL_FAILED,
	MAIN_READ_PARAM_CTRL_FAILED,
	MAIN_INIT_TCP_SERVER_FAILED,
	MAIN_RECV_SIZE_ANOMALY,
	MAIN_CMD_OBJ_OUTLIMIT,
	MAIN_RECV_TIMEOUT,
	MAIN_ERR_MAX,	
	
	
	/*param 异常码*/
	PARAM_ERR_MIN = 200,
	PARAM_NO_INITIALIZE,		/* 没有初始化 param 模块 */	
	PARAM_CMD_OUT_LIMIT,		/*  */
	PARAM_OFFSET_OUT_LIMIT,
	PARAM_NUM_ERR,
	PARAM_SIZE_ERR,
	PARAM_OPEN_ERR,
	PARAM_LEN_ERR,
	PARAM_WRITE_ERR,
	PARAM_UNLOCK_ERR,
	PARAM_SEMTAKE_TIMEOUT,
	PARAM_READ_ERR,
	PARAM_GET_FILE_WRITE_LENGTH,
	PARAM_GET_FILE_CREATE,
	PARAM_SET_FILE_OUT_TIME,
	PARAM_REPLY_SIZE_OUT,
	PARAM_INITIAL_SETTING,
	PARAM_MALLOC_FAILED,
	PARAM_INVALID_ARGUEMNT, 
	PARAM_ERR_MAX,
	
	/* trace 异常码*/
	TRACE_ERR_MIN = 300,
	TRACE_STATE_ERR,
	TRACE_TIME_FREQ_ERR,
	TRACE_ID_ERR,
	TRACE_OFFSET_SIZE_ERR,
	TRACE_NUM_ERR,
	TRACE_START_FAILED,
	TRACE_PROCESS_ERR,
	TRACE_ERR_MAX,
	
	/* injection 异常码*/
	INJ_ERR_MIN = 400,
	INJ_INIT_ERR,
	INJ_STATE_ERR,
	INJ_ID_ERR,
	INJ_POS_ERR,	
	INJ_SET_NULL_FILE,
	INJ_SET_LOOP_ERR,
	INJ_FILE_READ_OPEN_ERR,
	INJ_FILE_READ_LEN_ERR,
	INJ_FILE_READ_MALLOC_ERR,
	INJ_FILE_READ_READ_ERR,
	INJ_FILE_READ_CLOSE_ERR,
	INJ_CLEAR_MEMSET_ERR,
	INJ_PROCESS_NULL_PTR,
	INJ_PROCESS_ERR,
	INJ_STATE_OUT_LIMIT,
	INJ_ERR_MAX,
	
	/* event 异常码*/
	EVENT_ERR_MIN = 500,
	EVENT_SET_PARAM_ERR,   /* 传入的参数检查未通过 */
	EVENT_GET_ID_ERR,  /* 传入的id值不在范围内 */
	EVENT_CLEAN_ID_ERR,  /* 传入的id值不在范围内 */
	EVENT_CLEAN_FAILED_ERR,   /* 当id值被占用时，清除失败  */
	EVENT_VAR_GET_ERR,   /* 左右值取值失败 */
	EVENT_RELATION_OUT_LIMIT,  /* 比较运算符不对  */
	EVENT_DATATYPE_OUT_LIMIT,  /* 左右值数据类型不对  */
	EVENT_ERR_MAX,
	
	/* servo 异常码 */
	SERVO_ERR_MIN = 600,
	SERVO_ERR_MAX,
	
	/* RDC 异常码 */
	RDC_ERR_MIN = 700,
	RDC_NOT_INITIALIZED,
	RDC_CMD_OUT_LIMIT,
	RDC_OPEN_FILE_FAILED,
	RDC_READ_FILE_FAILED,
	RDC_NO_IF_END,	
	RDC_EVENT_OUT_LIMIT,
	RDC_NOT_AVAILABLE,
	RDC_ITEM_OUT_LIMIT,	
	RDC_ERR_MAX,

}ERROR_CODE_ENUM;


typedef struct CMD_RECV_STRUCT
{
	int iSize;
	int iObj[5];
	int iCmd;
	char buf[MAX_RECV_SIZE-RECV_HEAER_SIZE];
}CMD_RECV_STRUCT;


typedef struct CMD_SEND_STRUCT
{
	int iSize;
	int iErrCode;	
	char buf[MAX_SEND_SIZE-SEND_HEAER_SIZE];
}CMD_SEND_STRUCT;

typedef struct CMD_INFO_STRUCT
{
	boolean bNew;	
	boolean bFinished;
	
	CMD_RECV_STRUCT stRecv; /* int iSize; int iObj[5]; int iCmd; ...*/
	CMD_SEND_STRUCT stSend; /* int iErrCode; ...*/	
}CMD_INFO_STRUCT;




#endif
